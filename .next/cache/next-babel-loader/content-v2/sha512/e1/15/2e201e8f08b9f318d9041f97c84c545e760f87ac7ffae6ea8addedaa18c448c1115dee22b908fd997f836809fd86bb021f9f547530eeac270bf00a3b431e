{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"C:/Users/Shakhriyor_M/Desktop/course/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"axios\";\nimport { useRouter } from \"next/router\";\nimport { createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nvar AuthContext = /*#__PURE__*/createContext();\nexport var useUser = function useUser() {\n  var authContext = useContext(AuthContext);\n  return authContext.user;\n};\nexport var useSetUser = function useSetUser() {\n  var authContext = useContext(AuthContext);\n  return authContext.setUser;\n};\nexport var useLoggedInOrRiderect = function useLoggedInOrRiderect() {\n  var user = useUser();\n  var router = useRouter();\n  useEffect(function () {\n    if (user === null) {\n      router.replace(\"/login/?next=\".concat(router.asPath));\n    }\n  }, [user]);\n  return user !== null;\n};\n\nvar AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState({\n    user: undefined\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var setUser = useCallback(function (user) {\n    setState({\n      user: user\n    });\n  }, []);\n  var value = useMemo(function () {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      setUser: setUser\n    });\n  }, [state]);\n  useEffect(function () {\n    axios.get(\"/api/session/\").then(function (response) {\n      setState({\n        user: response.data\n      });\n    }).catch(function () {\n      setState({\n        user: null\n      });\n    });\n  }, []);\n\n  if (state.user === undefined) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(AuthContext.Provider, {\n    value: value,\n    children: children\n  });\n};\n\nexport default AuthProvider;","map":null,"metadata":{},"sourceType":"module"}